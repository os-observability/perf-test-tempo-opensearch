---
memcached:
  enabled: false
search:
  enabled: true
traces:
  jaeger:
    thriftHttp:
      enabled: true
tempo:
  structuredConfig:
    server:
      # At larger scales, searching starts to feel more like a batch job.
      # Increase the server timeout intervals.
      http_server_read_timeout: 3m
      http_server_write_timeout: 3m
    querier:
      query_timeout: 30s
      # Greatly increase the amount of work each querier will attempt
      max_concurrent_queries: 80
      search:
        query_timeout: 40s
    storage:
      trace:
        cache: none
        s3:
          hedge_requests_at: 5s
          hedge_requests_up_to: 3
    query_frontend:
      search:
        concurrent_jobs: 5000
        max_duration: 72h0m0s
    overrides:
      ingestion_burst_size_bytes: 15000000000
      ingestion_rate_limit_bytes: 15000000000
      max_traces_per_user: 50000000
      max_bytes_per_tag_values_query: 15000000000
      # default is 5000 (5Kb), 0 means no limit
      max_search_bytes_per_trace: 0
server:
  logLevel: debug
ingester:
  replicas: 1
  config:
    replication_factor: 1

  # maximum length of time before cutting a block
  # (default: 1h)
  # change if needed to flush data to s3 earlier
    max_block_duration: 10m

  # maximum size of a block before cutting it
  # (default: 1073741824 = 1GB)
  #max_block_bytes:
  resources:
    requests:
      cpu: 1000m
      memory: 1500Mi
    limits:
      cpu: "1000m"
      memory: "1500Mi"
distributor:
  replicas: 1
  affinity: {}
  resources:
    requests:
      cpu: 1000m
      memory: 1500Mi
    limits:
      cpu: "1000m"
      memory: "1500Mi"
compactor:
  resources:
    requests:
      cpu: 200m
      memory: 100Mi
    limits:
      cpu: "200m"
      memory: "400Mi"
querier:
  resources:
    requests:
      cpu: 500m
      memory: 500Mi
    limits:
      cpu: "500m"
      memory: "500Mi"
queryFrontend:
  resources:
    requests:
      cpu: 200m
      memory: 300Mi
    limits:
      cpu: "200m"
      memory: "300Mi"
  query:
    resources:
      requests:
        cpu: 800m
        memory: 300Mi
      limits:
        cpu: "800m"
        memory: "300Mi"
storage:
  trace:
    backend: "s3"
    s3:
      access_key: tempo
      bucket: tempo
      endpoint: minio.minio.svc:9000
      insecure: true
      secret_key: supersecret
    blocklist_poll: 5m
    wal:
      path: /var/tempo/wal
